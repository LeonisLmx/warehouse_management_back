<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.pqz.emsboot.modules.output.mapper.OrderListMapper">
        <select id="getOrderByCid" resultType="cn.pqz.emsboot.modules.output.entity.OrderList">
        select o.* from order_list o,client_order co where o.id=co.oid and co.cid=#{id}
    </select>

    <select id="aggregateData" resultType="map">
        SELECT orderType,count(0) as nums,operateId,sum(price * count) as total from order_list
        where 1 = 1
        <if test="startTime != null">
          and 'date' ge; #{startTime}
        </if>
        <if test="endTime != null">
            and 'date' le; #{endTime}
        </if>
        <if test="operateId != null">
            and operateId = #{operateId}
        </if>
        GROUP BY operateId,orderType
    </select>

    <select id="getAllExpressName" resultType="String">
        select distinct expressName from order_list where orderState in (7,8,9)
    </select>

    <select id="staticsOrders" resultType="map">
        select s.name ,ol.substationId ,count(0) as counts,sum(ol.price * ol.count)  as totalPrice,sum(ol.count) as totalCount  from order_list ol left join substation s on ol.substationId  = s.id  where ol .substationId > 0 group by ol .substationId
    </select>

    <select id="querySupplierSettlement" resultType="map">
        select g.supplierId ,ol.price as price, g.name,sum(ol.count) as totalCount,sum(ol.count * ol.price) as totalPrice,ol.goodsId ,ol.orderType
        from order_list ol
        left join goods g on ol .goodsId = g.id  where g.supplierId = #{supplierId}
        group by ol.orderType
    </select>

    <select id="querySubstationSettlement" resultType="map">
        select g.name ,g.id as goodsId, sum(ol.count) as totalCount, sum(ol.count * ol.price) as totalPrice,ol.orderType,ol.substationId
        from order_list ol left join goods g on ol.goodsId = g.id
        where 1 = 1
        <if test="startDate != null">
        and ol.`date` &gt;= #{startDate}
        </if>
        <if test="endDate != null">
            and ol.`date` &lt;= #{endDate}
        </if>
        <if test="substationId != null">
            and ol.substationId  = #{substationId}
        </if>
        group by ol.orderState
    </select>

    <select id="queryStateData" resultType="map">
        select count(0) as count, ol.orderState  from order_list ol  group by ol.orderState
    </select>

    <select id="queryTypeData" resultType="map">
        select count(0) as count, ol.orderType  from order_list ol  group by ol.orderType
    </select>
</mapper>